{"version":3,"file":"static/js/890.998d332d.chunk.js","mappings":"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","sources":["Components/Dropdown/Dropdown2.tsx","Components/Dropdown/Dropdown1.tsx","Components/Dropdown/Dropdown3.tsx","Pages/Dropdown/index.tsx"],"sourcesContent":["import { Box } from '@mui/material'\r\nimport React, { useState, useRef, useEffect } from 'react'\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\nimport { AppColors, AppShadow } from '../../AppColor'\r\nimport './dropdown.css'\r\nimport { AppText } from '../../AppText'\r\n\r\nfunction Dropdown2({ label, data }: any) {\r\n    const [activeDropdown, setActiveDropdown] = useState<boolean>(false)\r\n    const [select, setSelect] = useState<string>(label)\r\n\r\n    const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n    const handleClick = () => {\r\n        setActiveDropdown(!activeDropdown)\r\n    }\r\n\r\n    const handleSelect = (item: string) => {\r\n        setActiveDropdown(false)\r\n        if (item !== 'None') {\r\n            setSelect(item)\r\n        } else {\r\n            setSelect(item)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (e: MouseEvent) => {\r\n            if (\r\n                dropdownRef.current &&\r\n                !dropdownRef.current.contains(e.target as Node)\r\n            ) {\r\n                setActiveDropdown(false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n    return (\r\n        <Box ref={dropdownRef} sx={{\r\n            minWidth: '100px',\r\n            width: '100%',\r\n            minHeight: '30px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            backgroundColor: AppColors.text.white,\r\n            border: `1px solid ${AppText.Body_Text.color}`,\r\n            borderRadius: '4px',\r\n            p: '10px',\r\n            cursor: 'pointer',\r\n            position: 'relative',\r\n            // boxShadow: AppShadow.boxShadow\r\n        }} >\r\n\r\n            <Box sx={{ flex: '1', fontSize: '14px', userSelect: 'none', color: AppColors.main.primary }} onClick={handleClick}>\r\n                {select === 'None' ? label : select}\r\n            </Box>\r\n\r\n            <Box onClick={handleClick} >\r\n                <AiFillCaretDown style={{ color: AppColors.main.primary, fontSize: '20px' }} />\r\n            </Box>\r\n\r\n            {/* option */}\r\n            <Box className={activeDropdown ? 'dropdown_options active' : 'dropdown_options'} sx={{\r\n                borderRadius: '4px',\r\n                overflow: 'auto', padding: '6px 0',\r\n                boxShadow: '1px 1px 1px 0 #acacac40',\r\n            }}>\r\n                {data.map((item: any, index: any) => {\r\n                    return (\r\n                        <li key={index} className='dropdown_item' >\r\n                            <span style={{ color: AppColors.main.primary }} onClick={() => handleSelect(item)}>{item}</span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default Dropdown2\r\n","import { Box } from '@mui/material'\r\nimport React, { useState, useRef, useEffect } from 'react'\r\nimport { AiFillCaretDown, AiOutlineDelete } from 'react-icons/ai'\r\nimport { AppColors, AppShadow } from '../../AppColor'\r\nimport './dropdown.css'\r\nimport { AppText } from '../../AppText'\r\n\r\nfunction Dropdown1({ label, data }: any) {\r\n    const [count, setCount] = useState<number>(0)\r\n    const [activeDropdown, setActiveDropdown] = useState<boolean>(false)\r\n    const [optionList, setOptionList] = useState<string[]>([])\r\n\r\n    const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n    const handleClick = () => {\r\n        setActiveDropdown(!activeDropdown)\r\n    }\r\n\r\n    const handleCheckbox = ({ item }: { item: string }) => {\r\n        if (!optionList.includes(item)) {\r\n            setCount(prev => prev + 1)\r\n            setOptionList(prev => {\r\n                const newList = [...prev]\r\n                newList.push(item)\r\n                return newList\r\n            })\r\n        } else {\r\n            setCount(prev => prev - 1)\r\n            setOptionList(prev => {\r\n                const newList = [...prev]\r\n                const index = newList.indexOf(item)\r\n                if (index !== -1) newList.splice(index, 1)\r\n                return newList\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleDelete = (index: number) => {\r\n        setOptionList(prev => {\r\n            const newList = [...prev]\r\n            newList.splice(index, 1)\r\n            return newList\r\n        })\r\n        const isChecked = false\r\n    }\r\n\r\n    const handleDeleteAll = () => {\r\n        setOptionList([])\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (e: MouseEvent) => {\r\n            if (\r\n                dropdownRef.current &&\r\n                !dropdownRef.current.contains(e.target as Node)\r\n            ) {\r\n                setActiveDropdown(false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n    return (\r\n        <Box ref={dropdownRef} sx={{\r\n            minWidth: '100px',\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n            border: `1px solid ${AppText.Body_Text.color}`,\r\n            borderRadius: '4px',\r\n            p: '10px',\r\n            position: 'relative',\r\n            // boxShadow: AppShadow.boxShadow\r\n        }} >\r\n\r\n            <Box sx={{\r\n                flex: '1', fontSize: '14px', userSelect: 'none', flexWrap: 'wrap',\r\n                color: AppColors.main.primary, display: 'flex', gap: '5px'\r\n            }}>\r\n                {/* {count !== 0 ? `${count} Selected` : label} */}\r\n                {optionList.length === 0 ? label :\r\n                    optionList.map((option: any, index: any) => {\r\n                        return (<Box key={index} sx={{\r\n                            width: '70px', fontSize: '10px', display: 'flex', gap: '4px', alignItems: 'center',\r\n                            border: `1px solid ${AppText.Body_Text.color}`, color: AppText.Body_Text.color,\r\n                            padding: '2px 4px', borderRadius: '12px'\r\n                        }}>\r\n                            <span style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', width: '45px', textAlign: 'center' }}>\r\n                                {option}\r\n                            </span>\r\n                            <Box sx={{\r\n                                cursor: 'pointer', borderRadius: '50%',\r\n                                backgroundColor: AppColors.main.primary, color: AppColors.text.white,\r\n                                width: '16px', height: '16px', fontSize: '20px',\r\n                                display: 'flex', justifyContent: 'center', alignItems: 'center'\r\n                            }} onClick={() => handleDelete(index)}>&times;</Box>\r\n                        </Box>)\r\n                    })}\r\n            </Box>\r\n\r\n            {optionList.length > 1 &&\r\n                <Box onClick={handleDeleteAll} sx={{\r\n                    cursor: 'pointer', mr: '5px'\r\n                }}>\r\n                    <AiOutlineDelete style={{ color: AppText.Body_Text.color, fontSize: '20px' }} />\r\n                </Box>\r\n            }\r\n\r\n            <Box onClick={handleClick} sx={{\r\n                cursor: 'pointer',\r\n            }}>\r\n                <AiFillCaretDown style={{ color: AppColors.main.primary, fontSize: '20px' }} />\r\n            </Box>\r\n\r\n            {/* option */}\r\n            <Box className={activeDropdown ? 'dropdown_options active' : 'dropdown_options'} sx={{\r\n                borderRadius: '4px',\r\n                overflow: 'auto', padding: '6px 0',\r\n                boxShadow: '1px 1px 1px 0 #acacac40',\r\n            }}>\r\n                {data.map((item: any, index: any) => {\r\n                    return (\r\n                        <li key={index} className='dropdown_item'>\r\n                            <input style={{ cursor: 'pointer', color: AppColors.main.primary }} type=\"checkbox\"\r\n                                onChange={() => handleCheckbox({ item })} checked={optionList.includes(item)} />\r\n                            <span style={{ cursor: 'pointer', color: AppColors.main.primary }} onClick={() => handleCheckbox({ item })}>{item}</span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Dropdown1\r\n","import { Box } from '@mui/material'\r\nimport React, { useState, useRef, useEffect } from 'react'\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\nimport { AppColors, AppShadow, appColor } from '../../AppColor'\r\nimport './dropdown.css'\r\nimport { AppText } from '../../AppText'\r\n\r\nfunction Dropdown3({ label, data }: any) {\r\n    const [activeDropdown, setActiveDropdown] = useState<boolean>(false)\r\n    const [select, setSelect] = useState<string>(label)\r\n\r\n    const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n    const handleClick = () => {\r\n        setActiveDropdown(!activeDropdown)\r\n    }\r\n\r\n    const handleSelect = (item: string) => {\r\n        setActiveDropdown(false)\r\n        if (item !== 'None') {\r\n            setSelect(item)\r\n        } else {\r\n            setSelect(item)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (e: MouseEvent) => {\r\n            if (\r\n                dropdownRef.current &&\r\n                !dropdownRef.current.contains(e.target as Node)\r\n            ) {\r\n                setActiveDropdown(false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n    return (\r\n        <Box ref={dropdownRef} sx={{\r\n            width: '100%',\r\n            height: '40px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            background: `linear-gradient(135deg, ${AppColors.main.primary_gradient} 0%, ${AppColors.main.primary} 100%)`,\r\n            border: `1px solid ${AppColors.main.primary}`,\r\n            borderRadius: '4px',\r\n            px: '10px',\r\n            cursor: 'pointer',\r\n            position: 'relative',\r\n        }} >\r\n\r\n            <Box sx={{ flex: '1', mr: '10px', fontSize: '14px', userSelect: 'none', color: AppColors.text.white }} onClick={handleClick}>\r\n                {select === 'None' ? label : select}\r\n            </Box>\r\n\r\n            <Box onClick={handleClick} >\r\n                <AiFillCaretDown style={{ color: AppColors.text.white, fontSize: '20px' }} />\r\n            </Box>\r\n\r\n            {/* option */}\r\n            <Box className={activeDropdown ? 'dropdown_options active' : 'dropdown_options'} sx={{\r\n                borderRadius: '4px',\r\n                overflow: 'auto', padding: '6px 0',\r\n                boxShadow: '1px 1px 1px 0 #acacac40',\r\n            }}>\r\n                {data.map((item: any, index: any) => {\r\n                    return (\r\n                        <li key={index} className='dropdown_item'>\r\n                            <span style={{ cursor: 'default', color: AppColors.main.primary }} onClick={() => handleSelect(item)}>{item}</span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default Dropdown3\r\n","import React from 'react'\r\nimport AppBox from '../../Components/AppBox/AppBox'\r\nimport { Box, Paper } from '@mui/material'\r\nimport { AppText } from '../../AppText'\r\nimport Dropdown1 from '../../Components/Dropdown/Dropdown1'\r\nimport Dropdown2 from '../../Components/Dropdown/Dropdown2'\r\nimport Dropdown3 from '../../Components/Dropdown/Dropdown3'\r\n\r\nfunction Dropdown() {\r\n  const data1 = ['None', 'Viet Nam', 'England', 'Singapore', 'China', 'Canada', \"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\"]\r\n  const data2 = ['Viet Nam', 'England', 'Singapore', 'China', 'Canada', \"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\"]\r\n\r\n  return (\r\n    <AppBox>\r\n      <Box sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        gap: '20px'\r\n      }}>\r\n        <Box component={Paper} sx={{ padding: '12px', width: 'max-content' }}>\r\n          <span style={{ ...AppText.Sub_Title }}> Dropdown 1: </span>\r\n          <Box sx={{ marginTop: '12px', display: 'flex', alignItems: 'center', gap: '12px', width: '300px' }}>\r\n            <Dropdown1 label='Country' data={data2} />\r\n          </Box>\r\n        </Box>\r\n        <Box component={Paper} sx={{ padding: '12px', width: 'max-content' }}>\r\n          <span style={{ ...AppText.Sub_Title }}> Dropdown 2: </span>\r\n          <Box sx={{ marginTop: '12px', display: 'flex', alignItems: 'center', gap: '12px', width: '300px' }}>\r\n            <Dropdown2 label='Country' data={data1} />\r\n          </Box>\r\n        </Box>\r\n        <Box component={Paper} sx={{ padding: '12px', width: 'max-content' }}>\r\n          <span style={{ ...AppText.Sub_Title }}> Dropdown 3: </span>\r\n          <Box sx={{ marginTop: '12px', display: 'flex', alignItems: 'center', gap: '12px', width: '300px' }}>\r\n            <Dropdown3 label='Country' data={data1} />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </AppBox>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n"],"names":["_ref","label","data","_useState","useState","_useState2","_slicedToArray","activeDropdown","setActiveDropdown","_useState3","_useState4","select","setSelect","dropdownRef","useRef","handleClick","useEffect","handleClickOutside","e","current","contains","target","window","addEventListener","removeEventListener","_jsxs","Box","ref","sx","minWidth","width","minHeight","display","alignItems","backgroundColor","AppColors","text","white","border","concat","AppText","Body_Text","color","borderRadius","p","cursor","position","children","_jsx","flex","fontSize","userSelect","main","primary","onClick","AiFillCaretDown","style","className","overflow","padding","boxShadow","map","item","index","handleSelect","setCount","_useState5","_useState6","optionList","setOptionList","handleCheckbox","_ref2","includes","prev","newList","_toConsumableArray","indexOf","splice","push","flexWrap","gap","length","option","whiteSpace","textOverflow","textAlign","height","justifyContent","handleDelete","mr","AiOutlineDelete","type","onChange","checked","background","primary_gradient","px","data1","AppBox","component","Paper","_objectSpread","Sub_Title","marginTop","Dropdown1","Dropdown2","Dropdown3"],"sourceRoot":""}