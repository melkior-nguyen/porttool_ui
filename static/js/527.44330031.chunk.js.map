{"version":3,"file":"static/js/527.44330031.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/styles/getOverlayAlpha.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js","../node_modules/@mui/material/styles/defaultTheme.js","../node_modules/@mui/system/esm/propsToClassKey.js","../node_modules/@mui/system/esm/createStyled.js","../node_modules/@mui/material/styles/styled.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/material/styles/useThemeProps.js","../node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/utils/esm/resolveProps.js"],"sourcesContent":["// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return (alphaValue / 100).toFixed(2);\n};\nexport default getOverlayAlpha;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport getOverlayAlpha from '../styles/getOverlayAlpha';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const {\n      className,\n      component = 'div',\n      elevation = 1,\n      square = false,\n      variant = 'elevation'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","'use client';\n\nimport createTheme from './createTheme';\nconst defaultTheme = createTheme();\nexport default defaultTheme;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\"];\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nfunction isEmpty(string) {\n  return string.length === 0;\n}\n\n/**\n * Generates string classKey based on the properties provided. It starts with the\n * variant if defined, and then it appends all other properties in alphabetical order.\n * @param {object} props - the properties for which the classKey should be created.\n */\nexport default function propsToClassKey(props) {\n  const {\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let classKey = variant || '';\n  Object.keys(other).sort().forEach(key => {\n    if (key === 'color') {\n      classKey += isEmpty(classKey) ? props[key] : capitalize(props[key]);\n    } else {\n      classKey += `${isEmpty(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;\n    }\n  });\n  return classKey;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { getDisplayName, unstable_capitalize as capitalize } from '@mui/utils';\nimport createTheme from './createTheme';\nimport propsToClassKey from './propsToClassKey';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n  return null;\n};\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components;\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n  const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n  return variantsStyles;\n};\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        return typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg ? props => {\n          return stylesArg(_extends({}, props, {\n            theme: resolveTheme(_extends({}, props, {\n              defaultTheme,\n              themeId\n            }))\n          }));\n        } : stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const styleOverrides = getStyleOverrides(componentName, theme);\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle(_extends({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n          return null;\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      } else if (typeof styleArg === 'function' &&\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = props => styleArg(_extends({}, props, {\n          theme: resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }))\n        }));\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","'use client';\n\nimport { createStyled, shouldForwardProp } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport const rootShouldForwardProp = prop => shouldForwardProp(prop) && prop !== 'classes';\nexport const slotShouldForwardProp = shouldForwardProp;\nconst styled = createStyled({\n  themeId: THEME_ID,\n  defaultTheme,\n  rootShouldForwardProp\n});\nexport default styled;","'use client';\n\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","import { internal_resolveProps as resolveProps } from '@mui/utils';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","'use client';\n\nimport { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme,\n    themeId: THEME_ID\n  });\n}","export default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  Object.keys(slots).forEach(\n  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        const utilityClass = getUtilityClass(key);\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","import ClassNameGenerator from '../ClassNameGenerator';\n\n// If GlobalStateSlot is changed, GLOBAL_STATE_CLASSES in\n// \\packages\\api-docs-builder\\utils\\parseSlotsAndClasses.ts must be updated accordingly.\nconst globalStateClassesMapping = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClassesMapping[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param {object} defaultProps\n * @param {object} props\n * @returns {object} resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = _extends({}, props);\n  Object.keys(defaultProps).forEach(propName => {\n    if (propName.toString().match(/^(components|slots)$/)) {\n      output[propName] = _extends({}, defaultProps[propName], output[propName]);\n    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {\n      const defaultSlotProps = defaultProps[propName] || {};\n      const slotProps = props[propName];\n      output[propName] = {};\n      if (!slotProps || !Object.keys(slotProps)) {\n        // Reduce the iteration if the slot props is empty\n        output[propName] = defaultSlotProps;\n      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {\n        // Reduce the iteration if the default slot props is empty\n        output[propName] = slotProps;\n      } else {\n        output[propName] = _extends({}, slotProps);\n        Object.keys(defaultSlotProps).forEach(slotPropName => {\n          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n        });\n      }\n    } else if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  });\n  return output;\n}"],"names":["elevation","Math","pow","log","toFixed","getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","PaperRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","square","rounded","concat","_ref","_theme$vars$overlays","theme","_extends","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","alpha","getOverlayAlpha","overlays","React","inProps","ref","useThemeProps","className","_props$component","component","_props$elevation","_props$square","_props$variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","defaultTheme","createTheme","isEmpty","string","length","propsToClassKey","classKey","Object","keys","sort","forEach","key","capitalize","toString","shouldForwardProp","prop","systemDefaultTheme","resolveTheme","obj","themeId","rootShouldForwardProp","input","arguments","undefined","_input$defaultTheme","_input$rootShouldForw","_input$slotShouldForw","slotShouldForwardProp","systemSx","styleFunctionSx","__mui_systemSx","tag","inputOptions","processStyles","filter","style","componentName","componentSlot","inputSkipVariantsResolver","skipVariantsResolver","inputSkipSx","skipSx","_inputOptions$overrid","charAt","toLowerCase","slice","options","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","muiStyledResolver","styleArg","_len","expressions","Array","_key","expressionsWithDefaultTheme","map","stylesArg","__emotion_real","transformedStyleArg","push","styleOverrides","components","getStyleOverrides","resolvedStyleOverrides","entries","_ref2","_ref3","_slicedToArray","slotKey","slotStyle","_theme$components","_props$ownerState","variantsStyles","themeVariants","variants","themeVariant","isMatch","variantsResolver","definition","getVariantStyles","numOfCustomFnsApplied","isArray","placeholders","fill","_toConsumableArray","raw","Component","apply","muiName","withConfig","createStyled","THEME_ID","useTheme","mergedProps","params","defaultProps","resolveProps","getThemeProps","systemUseThemeProps","getUtilityClass","output","reduce","acc","utilityClass","join","globalStateClassesMapping","active","checked","completed","disabled","error","expanded","focused","focusVisible","open","readOnly","required","selected","globalStatePrefix","globalStateClass","ClassNameGenerator","generate","result","propName","match","defaultSlotProps","slotProps","slotPropName"],"sourceRoot":""}