import { Form } from "@/components/DynamicForm/type";

export const mySQLFormData: Form = {
  id: "MYSQL",
  initialValues: {
    typeMonitor: "MYSQL",
    pinOrder: false,
    name: "",
    connection: { value: "common", name: "Common" },
    uri: "",
    host: "",
    port: "",
    interval: "",
    timeout: "",
    retries: "",
    assignZones: [],
    user: "",
    password: "",
    database: "",
    query: "",
    queryReturnExpect: "{}",
  },
  fields: [
    {
      columnWidth: 12,
      type: "checkbox",
      label: "Arrange order your monitor",
      name: "pinOrder",
    },
    {
      columnWidth: 12,
      type: "text",
      name: "name",
      label: "Name",
      validate: { message: "Name is required" },
    },
    {
      columnWidth: 3,
      type: "dropdown",
      name: "typeMonitor",
      label: "Type Monitor",
      options: [],
    },
    {
      columnWidth: 2,
      type: "dropdown",
      name: "connection",
      label: "Connection",
      options: [
        { value: "common", name: "Common" },
        { value: "uri", name: "URI" },
      ],
    },
    {
      columnWidth: 5,
      type: "text",
      name: "host",
      label: "Host",
      validate: { message: "Host is required" },
    },
    {
      columnWidth: 2,
      type: "text",
      name: "port",
      label: "Port",
      validate: { message: "Port is required" },
    },
    {
      columnWidth: 4,
      type: "text",
      name: "database",
      label: "Database",
      validate: { message: "Database is required" },
    },
    {
      columnWidth: 4,
      type: "text",
      name: "user",
      label: "User",
    },
    {
      columnWidth: 4,
      type: "password",
      name: "password",
      label: "Password",
    },
    {
      columnWidth: 3,
      type: "dropdown",
      name: "interval",
      label: "Interval",
      validate: { message: "Interval is required" },
      options: [],
    },
    {
      columnWidth: 3,
      type: "dropdown",
      name: "timeout",
      label: "Timeout",
      validate: { message: "Timeout is required" },
      options: [],
    },
    {
      columnWidth: 3,
      type: "dropdown",
      name: "retries",
      label: "Retries",
      validate: { message: "Retries is required" },
      options: [],
    },
    {
      columnWidth: 3,
      type: "autoCompleteMultiSelect",
      name: "assignZones",
      label: "Assign Zones",
      validate: { message: "Assign Zones is required" },
      options: [],
    },
    {
      columnWidth: 12,
      type: "SQL",
      name: "query",
      label: "Query",
      validate: { message: "Query is required" },
    },
    {
      columnWidth: 12,
      type: "text",
      name: "queryReturnExpect",
      label: "Query Return Expect",
    },
  ],
};
