import { Form } from "@/components/DynamicForm/type";

export const httpsFormData: Form = {
  id: "HTTPS",
  initialValues: {
    typeMonitor: "HTTPS",
    pinOrder: false,
    name: "",
    method: "",
    host: "",
    port: "",
    path: "",
    interval: "",
    timeout: "",
    retries: "",
    assignZones: [],
    user: "",
    password: "",
    notifySslNearlyExpriesInDays: null,
    sslCheck: false,
    requestPayload: {},
    responseRegex: "",
    expectedCodes: [],
    followRedirect: false,
    headers: [{ key: "", value: "" }],
  },
  fields: [
    {
      columnWidth: 12,
      type: "checkbox",
      label: "Arrange order your monitor",
      name: "pinOrder",
    },
    {
      columnWidth: 12,
      type: "text",
      name: "name",
      label: "Name",
      validate: { message: "Name is required" },
    },
    {
      columnWidth: 2,
      type: "dropdown",
      name: "typeMonitor",
      label: "Type Monitor",
      options: [],
    },
    {
      columnWidth: 2,
      type: "dropdown",
      name: "method",
      label: "Method",
      validate: { message: "Method is required" },
      options: [],
    },
    {
      columnWidth: 6,
      type: "text",
      name: "host",
      label: "Host",
      validate: { message: "Host is required" },
    },
    {
      columnWidth: 2,
      type: "text",
      name: "port",
      label: "Port",
      validate: { message: "Port is required" },
    },
    {
      columnWidth: 12,
      type: "text",
      name: "path",
      label: "Path",
    },
    {
      columnWidth: 4,
      type: "dropdown",
      name: "interval",
      label: "Interval",
      validate: { message: "Interval is required" },
      options: [],
    },
    {
      columnWidth: 4,
      type: "dropdown",
      name: "timeout",
      label: "Timeout",
      validate: { message: "Timeout is required" },
      options: [],
    },
    {
      columnWidth: 4,
      type: "dropdown",
      name: "retries",
      label: "Retries",
      validate: { message: "Retries is required" },
      options: [],
    },
    {
      columnWidth: 4,
      type: "autoCompleteMultiSelect",
      name: "assignZones",
      label: "Assign Zones",
      validate: { message: "Assign Zones is required" },
      options: [],
    },
    {
      columnWidth: 4,
      type: "text",
      name: "user",
      label: "User",
    },
    {
      columnWidth: 4,
      type: "password",
      name: "password",
      label: "Password",
    },
    {
      columnWidth: 6,
      type: "checkbox",
      name: "sslCheck",
      label: "SSL Check",
    },
    {
      columnWidth: 6,
      type: "number",
      name: "notifySslNearlyExpriesInDays",
      label: "Notify SSL Nearly Expries In Days",
      validate: { message: "" },
      hidden: true,
    },
    {
      columnWidth: 12,
      type: "JSON",
      name: "requestPayload",
      label: "Request Payload",
    },
    {
      columnWidth: 12,
      type: "text",
      name: "responseRegex",
      label: "Response Regex",
    },
    {
      columnWidth: 6,
      type: "autoCompleteMultiSelect",
      name: "expectedCodes",
      label: "Expected Codes",
      validate: { message: "Expected Codes is required" },
      options: [],
    },
    {
      columnWidth: 6,
      type: "checkbox",
      name: "followRedirect",
      label: "Follow Redirect",
    },
    {
      columnWidth: 12,
      type: "dynamicField",
      name: "headers",
      label: "Request Headers",
    },
  ],
};
